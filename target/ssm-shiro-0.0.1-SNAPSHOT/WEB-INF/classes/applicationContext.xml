<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
		
		<!-- 配置 数据源、事务、整合mybatis、整合shiro -->
		
		<!-- 配置数据源-->
		<context:property-placeholder location="classpath:dbconfig.properties"/>
		<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
			<property name="user" value="${oracle.user}"></property>
			<property name="password" value="${oracle.password}"></property>
			<property name="jdbcUrl" value="${oracle.jdbcUrl}"></property>
			<property name="driverClass" value="${oracle.driverClass}"></property>
		</bean>
		
		<!-- 配置事务管理器 -->
		<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
			<property name="dataSource" ref="dataSource" ></property>
		</bean>
		
		<!-- 开启基于注解的事务，主要通过 XML配置 -->
		<aop:config>
			<aop:pointcut expression="execution(* com.ssm.crud.controller.*.*(..))" id="pointcut"/>
			<aop:pointcut expression="execution(* com.ssm.shiro.handler.*.*(..))" id="pointcut2"/>
			<aop:advisor advice-ref="advice" pointcut-ref="pointcut"/>
			<aop:advisor advice-ref="advice" pointcut-ref="pointcut2"/>
		</aop:config>
		
		<!-- 事务增强 -->
		<tx:advice id="advice" transaction-manager="transactionManager">
			<tx:attributes>
				<!-- 所有方法都是事务方法 -->
				<tx:method name="*"/>
				<tx:method name="get*" read-only="true"/>
				<tx:method name="find*" read-only="true"/>
			</tx:attributes>
		</tx:advice>
		
		<!-- 整合 mybatis -->
		<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
			<!-- 指定 mybatis 全局配置文件的位置 -->
			<property name="configLocation" value="classpath:mybatis-config.xml"></property>
			<!-- 指定 mybatis sql 映射文件的位置 -->
			<property name="mapperLocations" value="classpath:mapper/*.xml"></property>
			<property name="dataSource" ref="dataSource"></property>
		</bean>
		
		<!-- 将 mybatis 接口的实现加入 ioc 容器中 -->
		<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
			<property name="basePackage" value="com.ssm.crud.dao"></property>
		</bean>
		
		<!-- 配置可以批量操作的 bean -->
		<bean id="sqlSessionBatch" class="org.mybatis.spring.SqlSessionTemplate">
			<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
			<constructor-arg name="executorType" value="BATCH"></constructor-arg>
		</bean>
</beans>	